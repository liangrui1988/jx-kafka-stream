agent.sources=kafka-source
agent.sinks=phoenix-sink
agent.channels=memoryChannel
# configurationforchannel
agent.channels.memoryChannel.type=memory
agent.channels.memoryChannel.transactionCapacity=100
agent.channels.memoryChannel.byteCapacityBufferPercentage=20
# configurationforsource
agent.sources.kafka-source.type = org.apache.flume.source.kafka.KafkaSource
agent.sources.kafka-source.batchSize = 5000
agent.sources.kafka-source.batchDurationMillis = 2000
agent.sources.kafka-source.kafka.bootstrap.servers = 172.18.58.176:9092
agent.sources.kafka-source.kafka.topics = js-realtime
agent.sources.kafka-source.kafka.consumer.group.id = consumer.realtime.log
# configurationforinterceptor
#agent.sources.kafka-source.interceptors=i1
#agent.sources.kafka-source.interceptors.i1.type=host
#agent.sources.kafka-source.interceptors.i1.hostHeader=f_host
# configurationforsink
agent.sinks.phoenix-sink.type=org.apache.phoenix.flume.sink.PhoenixSink
agent.sinks.phoenix-sink.channel=memoryChannel
agent.sinks.phoenix-sink.batchSize=100
agent.sinks.phoenix-sink.table=common_rank
agent.sinks.phoenix-sink.ddl=CREATE TABLE IF NOT EXISTS common_rank (user_project VARCHAR(50) NOT NULL,rank_type VARCHAR(64) NOT NULL,rank_id VARCHAR(50) NOT NULL,rank_channel VARCHAR(50)  NOT NULL,rank_name VARCHAR(64),rank_value BIGINT,update_date BIGINT,CONSTRAINT pk PRIMARY KEY (user_project,rank_type,rank_id,rank_channel));
agent.sinks.phoenix-sink.zookeeperQuorum=localhost
agent.sinks.phoenix-sink.serializer=json
#agent.sinks.phoenix-sink.serializer.rowkeyType=uuid
#agent.sinks.phoenix-sink.serializer.regex=([^]*)([^]*)([^]*)(-|\\[[^\\]]*\\])\"([^]+)([^]+)([^\"]+)\"(-|[0-9]*)(-|[0-9]*)(?:([^\"]*|\"[^\"]*\")([^\"]*|\"[^\"]*\"))?
agent.sinks.phoenix-sink.serializer.columns=project,event,search_word,channel,count,count
agent.sinks.phoenix-sink.serializer.executeSql=UPSERT INTO common_rank (user_project,rank_type,rank_id,rank_channel,rank_value,update_date) VALUES(?,?,?,?,?,?,CURRENT_TIME()) ON DUPLICATE KEY UPDATE rank_value = rank_value+?,update_date=CURRENT_TIME();

